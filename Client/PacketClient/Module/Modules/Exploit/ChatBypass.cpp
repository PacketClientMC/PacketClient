#include "ChatBypass.h"

using namespace std;
ChatBypass::ChatBypass() : IModule(0, Category::EXPLOIT, "Bypass chat filters") {
	registerEnumSetting("Mode", &mode, 0);
	mode.addEntry("Prefix", 0);
	mode.addEntry("Test", 1);
}

const char* ChatBypass::getRawModuleName() {
	return "ChatBypass";
}

const char* ChatBypass::getModuleName() {
	name = string("ChatBypass ") + string(GRAY) + mode.GetEntry(mode.getSelectedValue()).GetName();
	return name.c_str();
}

void ChatBypass::onSendPacket(Packet* packet) {
	if (packet->isInstanceOf<TextPacket>()) {
		TextPacket* textPacket = reinterpret_cast<TextPacket*>(packet);
		string str; string start; string end;

		switch (mode.getSelectedValue()) {
		case 0: // Prefix
			start = "Packet Â» ";
			str = start + textPacket->message.getText();
			textPacket->message.resetWithoutDelete();
			textPacket->message = str;
			break;
		case 1: // Test
			string test = textPacket->message.getText();
			for (char c : test) {
				str = textPacket->message.getText();
				textPacket->message = str;
			}
			break;
		}
	}
}