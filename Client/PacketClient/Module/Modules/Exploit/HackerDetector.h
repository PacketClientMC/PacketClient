#pragma once
#include "../../ModuleManager.h"
#include "../Module.h"

class HackerDetector : public IModule {
private:
	float allowedOffGroundSpeed = 0, allowedGroundSpeed = 0;
	int allowedTicks = 0;
public:
	std::string str = "Message";
	std::string name = "Player";
	int timesFailedSpeed = 1;
	int timesFailedDerp = 1;
	int timesFailedFly = 1;

	int groundTicks = 0; int offGroundTicks = 0;
	int strictness = 0;
	int delay = 0;

	// AntiImmobile Check
	bool immobileCheck = true; bool failedImmobile = false;

	// Speed
	bool speedCheck = true;
	std::string currSpeed = "null";

	// Derp
	bool derpCheck = true;

	// Fly
	bool flyCheck = false;
	std::string currVelocity = "null";

	SettingEnum messages = this;

	virtual void onPlayerTick(Player* plr) override;
	virtual void onTick(GameMode* gm) override;
	virtual const char* getModuleName();
	virtual void onEnable() override;
	HackerDetector();
};